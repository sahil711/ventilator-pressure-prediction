wandb_project: kaggle-ventilator-pressure-prediction
experiment_name: v0-CNN-LSTM-classification-top3-smooth-loss

seq_len: 40 #None

is_u_out: True #False #True

topk: 3 #1 #3

create_features: False

training_type:
  loss: truncated #complete truncated
  metric: truncated #complete truncated
  is_smoothing: True

normalization:
  is_norm: True
  is_log_transform: False

dataset:
  train: &train_dataset
    class: VentilatorDataClassification
    kwargs:
      categorical_columns: ['u_out','R','C']
      numerical_columns: ['time_step','u_in']
      # numerical_columns: ['time_step', 'u_in','mean_u_in_last_5', 'min_u_in_last_5', 'max_u_in_last_5',
      #  'std_u_in_last_5', 'mean_u_in_last_10', 'min_u_in_last_10',
      #  'max_u_in_last_10', 'std_u_in_last_10', 'mean_u_in_next_5',
      #  'min_u_in_next_5', 'max_u_in_next_5', 'std_u_in_next_5',
      #  'mean_u_in_next_10', 'min_u_in_next_10', 'max_u_in_next_10',
      #  'std_u_in_next_10', 'u_in_cumsum', 'u_in_cummean', 'u_in_cummax', 'R+C',
      #  'R/C', 'u_in/C', 'u_in/R', 'u_in_cumsum/C', 'u_in_cumsum/R',
      #  'lag_u_in_1', 'lead_u_in_1', 'lag_u_in_2', 'lead_u_in_2', 'lag_u_in_3',
      #  'lead_u_in_3', 'lag_u_in_4', 'lead_u_in_4', 'auc', 'lag_auc_1',
      #  'lead_auc_1', 'lag_auc_2', 'lead_auc_2', 'per_change_u_in_lag_u_in_1',
      #  'per_change_u_in_lead_u_in_1', 'per_change_u_in_lag_u_in_2',
      #  'per_change_u_in_lead_u_in_2', 'per_change_u_in_lag_u_in_3',
      #  'per_change_u_in_lead_u_in_3', 'per_change_u_in_lag_u_in_4',
      #  'per_change_u_in_lead_u_in_4', 'per_change_auc_lag_auc_1',
      #  'per_change_auc_lead_auc_1', 'per_change_auc_lag_auc_2',
      #  'per_change_auc_lead_auc_2']
      target_column: pressure

  val: *train_dataset

  test:
    class: VentilatorDataClassification
    kwargs:
      categorical_columns: ['u_out','R','C']
      numerical_columns: ['time_step','u_in']

esr:
  monitor: val_MAE
  min_delta: 0.0001
  patience: 40
  verbose: False
  mode: min

num_epochs: &n_epochs 100

batch_size:
    train: 32 #128 #32
    val: 64 #256 64
num_workers:
    train: 8
    val: 8

optimizer:
    optim_class: Adam
    optim_kwargs:
        lr: &learning_rate 0.001

schedular:
    schedular_class: OneCycleLR
    schedular_interval: step
    scheduler_kwargs:
      max_lr: *learning_rate
      epochs: *n_epochs
      div_factor: 30
      pct_start: 0.2
      final_div_factor: 50

# schedular:
#     schedular_class: ReduceLROnPlateau
#     schedular_interval: epoch
#     scheduler_kwargs:
#       mode: min
#       factor: 0.8
#       patience: 3
#       threshold: 0.0001


loss:
  class: CrossEntropyLoss

mp_training: False

model:
  class: CNNLSTMModel
  kwargs:
    embedding_layer:
      u_out:
        num_embeddings: 2
        embedding_dim: 4
      R:
        num_embeddings: 3
        embedding_dim: 4
      C:
        num_embeddings: 3
        embedding_dim: 4

    input_dim: &in_dim 14 #32*3+52

    rnn_layer:
      class: LSTM
      kwargs:
        input_size: 32
        hidden_size: 512
        num_layers: 4
        batch_first: True
        bidirectional: True
        dropout: 0.2

    rnn_init:
      class: InitRNNWeights
      kwargs:
        init_type: yakama #yakama #None #xavier

    feature_extractor:
      input_layer:
        class: Conv1DBnRelu
        kwargs:
          in_channels: *in_dim
          out_channels: 32
          kernel_size: 5
          padding: 2
          is_bn: True
      # block1:
      #   class: Conv1DBasicBlock
      #   kwargs:
      #     in_channels: 512
      #     out_channels: 512
      #     kernel_size: 3
      #     padding: 1
      #     is_bn: False
      # block2:
      #   class: Conv1DBasicBlock
      #   kwargs:
      #     in_channels: 512
      #     out_channels: 512
      #     kernel_size: 3
      #     padding: 1
      #     is_bn: False
      # block3:
      #   class: Conv1DBasicBlock
      #   kwargs:
      #     in_channels: 512
      #     out_channels: 512
      #     kernel_size: 3
      #     padding: 1
      #     is_bn: False
      # block4:
      #   class: Conv1DBasicBlock
      #   kwargs:
      #     in_channels: 512
      #     out_channels: 512
      #     kernel_size: 3
      #     padding: 1
      #     is_bn: False
      # block5:
      #   class: Conv1DBasicBlock
      #   kwargs:
      #     in_channels: 512
      #     out_channels: 512
      #     kernel_size: 3
      #     padding: 1
      #     is_bn: False
      # block6:
      #   class: Conv1DBasicBlock
      #   kwargs:
      #     in_channels: 512
      #     out_channels: 512
      #     kernel_size: 3
      #     padding: 1
      #     is_bn: False
